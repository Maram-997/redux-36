{"ast":null,"code":"var _jsxFileName = \"/home/maram997/redux-36/src/components/vote-counter.js\";\nimport { connect } from 'react-redux';\nimport { increment, decrement, reset } from '../store/votes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst votesCounter = props => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.counter.candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => props.increment(candidate.name),\n        children: [candidate.name, \" : \", candidate.votes]\n      }, candidate.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\nconst mapStateToProps = state => ({\n  counter: state.counter\n});\n\nconst mapDispatchToProps = {\n  increment,\n  decrement,\n  reset\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(votesCounter);","map":{"version":3,"sources":["/home/maram997/redux-36/src/components/vote-counter.js"],"names":["connect","increment","decrement","reset","votesCounter","props","counter","candidates","map","candidate","name","votes","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,SAASC,SAAT,EAAqBC,SAArB,EAAgCC,KAAhC,QAA4C,gBAA5C;;;AAEA,MAAMC,YAAY,GAAEC,KAAK,IAAI;AACzB,sBACI;AAAA,4BACI;AAAA,gBACKA,KAAK,CAACC,OAAN,CAAcC,UAAd,CAAyBC,GAAzB,CAA6BC,SAAS,iBACnC;AAAI,QAAA,OAAO,EAAE,MAAMJ,KAAK,CAACJ,SAAN,CAAgBQ,SAAS,CAACC,IAA1B,CAAnB;AAAA,mBAA0ED,SAAS,CAACC,IAApF,SAA6FD,SAAS,CAACE,KAAvG;AAAA,SAAyDF,SAAS,CAACC,IAAnE;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAQ,MAAA,OAAO,EAAEL,KAAK,CAACF,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;AAYA,MAAMS,eAAe,GAAGC,KAAK,KAAK;AAC9BP,EAAAA,OAAO,EAAEO,KAAK,CAACP;AADe,CAAL,CAA7B;;AAIA,MAAMQ,kBAAkB,GAAG;AAACb,EAAAA,SAAD;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAA3B;AAEA,eAAeH,OAAO,CAACY,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CV,YAA5C,CAAf","sourcesContent":["import {connect} from 'react-redux'\nimport { increment , decrement, reset} from '../store/votes'\n\nconst votesCounter =props => {\n    return (\n        <section>\n            <ul>\n                {props.counter.candidates.map(candidate =>\n                    <li onClick={() => props.increment(candidate.name)} key={candidate.name}>{candidate.name} : {candidate.votes}</li>)}\n            </ul>\n            <button onClick={props.reset}>Reset</button>\n        </section>\n    );\n}\n\nconst mapStateToProps = state => ({\n    counter: state.counter\n})\n\nconst mapDispatchToProps = {increment , decrement, reset}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(votesCounter)\n\n\n"]},"metadata":{},"sourceType":"module"}